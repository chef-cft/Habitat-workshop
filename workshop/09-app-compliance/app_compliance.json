{"platform":{"name":"linux","release":"unknown","target_id":""},"profiles":[{"name":"nginx-baseline","version":"2.2.0","sha256":"5a166fe7cc6555f824b6511b3b1688ee3f8d1e722579de4474a3d791b1d9d5f4","title":"DevSec Nginx Baseline","maintainer":"DevSec Hardening Framework Team","summary":"Test-suite for best-practice nginx hardening","license":"Apache-2.0","copyright":"DevSec Hardening Framework Team","copyright_email":"hello@dev-sec.io","supports":[{"platform-family":"unix"}],"attributes":[{"name":"client_max_body_size","options":{"value":"1k"}},{"name":"client_body_buffer_size","options":{"value":"1k"}},{"name":"client_header_buffer_size","options":{"value":"1k"}},{"name":"large_client_header_buffers","options":{"value":"2 1k"}},{"name":"keepalive_timeout","options":{"value":"5 5"}},{"name":"client_body_timeout","options":{"value":"10"}},{"name":"client_header_timeout","options":{"value":"10"}},{"name":"send_timeout","options":{"value":"10"}},{"name":"http_methods","options":{"value":"GET\\|HEAD\\|POST"}}],"groups":[{"id":"controls/nginx_spec.rb","controls":["nginx-01","nginx-02","nginx-03","nginx-04","nginx-05","nginx-06","nginx-07","nginx-08","nginx-09","nginx-10","nginx-12","nginx-13","nginx-14","nginx-15","nginx-16","nginx-17"],"title":"NGINX server config"}],"controls":[{"id":"nginx-01","title":"Running worker process as non-privileged user","desc":"The NGINX worker processes should run as non-privileged user. In case of compromise of the process, an attacker has full access to the system.","descriptions":[{"label":"default","data":"The NGINX worker processes should run as non-privileged user. In case of compromise of the process, an attacker has full access to the system."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-01' do\n  impact 1.0\n  title 'Running worker process as non-privileged user'\n  desc 'The NGINX worker processes should run as non-privileged user. In case of compromise of the process, an attacker has full access to the system.'\n  describe user(nginx_lib.valid_users) do\n    it { should exist }\n  end\n  describe parse_config_file(nginx_conf, options) do\n    its('user') { should eq nginx_lib.valid_users }\n  end\n\n  describe parse_config_file(nginx_conf, options) do\n    its('group') { should_not eq 'root' }\n  end\nend\n","source_location":{"line":100,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":1.9616e-05,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-02","title":"Check NGINX config file owner, group and permissions.","desc":"The NGINX config file should owned by root, only be writable by owner and not write- and readable by others.","descriptions":[{"label":"default","data":"The NGINX config file should owned by root, only be writable by owner and not write- and readable by others."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-02' do\n  impact 1.0\n  title 'Check NGINX config file owner, group and permissions.'\n  desc 'The NGINX config file should owned by root, only be writable by owner and not write- and readable by others.'\n  describe file(nginx_conf) do\n    it { should be_owned_by 'root' }\n    it { should be_grouped_into 'root' }\n    it { should_not be_readable.by('others') }\n    it { should_not be_writable.by('others') }\n    it { should_not be_executable.by('others') }\n  end\nend\n","source_location":{"line":116,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":4.645e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-03","title":"Nginx default files","desc":"Remove the default nginx config files.","descriptions":[{"label":"default","data":"Remove the default nginx config files."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-03' do\n  impact 1.0\n  title 'Nginx default files'\n  desc 'Remove the default nginx config files.'\n  describe file(File.join(nginx_confd, 'default.conf')) do\n    it { should_not be_file }\n  end\n\n  describe file(File.join(nginx_enabled, 'default')) do\n    it { should_not be_file }\n  end\n\n  conf_paths.each do |conf_path|\n    describe file(conf_path) do\n      it { should be_file }\n    end\n  end\nend\n","source_location":{"line":129,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":3.036e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-04","title":"Check for multiple instances","desc":"Different instances of the nginx webserver should run in separate environments","descriptions":[{"label":"default","data":"Different instances of the nginx webserver should run in separate environments"}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-04' do\n  impact 1.0\n  title 'Check for multiple instances'\n  desc 'Different instances of the nginx webserver should run in separate environments'\n  describe command('ps aux | egrep \"nginx: master\" | egrep -v \"grep\" | wc -l') do\n    its(:stdout) { should match(/^1$/) }\n  end\nend\n","source_location":{"line":148,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":2.754e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-05","title":"Disable server_tokens directive","desc":"Disables emitting nginx version in error messages and in the “Server” response header field.","descriptions":[{"label":"default","data":"Disables emitting nginx version in error messages and in the “Server” response header field."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-05' do\n  impact 1.0\n  title 'Disable server_tokens directive'\n  desc 'Disables emitting nginx version in error messages and in the “Server” response header field.'\n  describe parse_config(nginx_parsed_config, options) do\n    its('server_tokens') { should eq 'off' }\n  end\nend\n","source_location":{"line":157,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":6.504e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-06","title":"Prevent buffer overflow attacks","desc":"Buffer overflow attacks are made possible by writing data to a buffer and exceeding that buffer boundary and overwriting memory fragments of a process. To prevent this in nginx we can set buffer size limitations for all clients.","descriptions":[{"label":"default","data":"Buffer overflow attacks are made possible by writing data to a buffer and exceeding that buffer boundary and overwriting memory fragments of a process. To prevent this in nginx we can set buffer size limitations for all clients."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-06' do\n  impact 1.0\n  title 'Prevent buffer overflow attacks'\n  desc 'Buffer overflow attacks are made possible by writing data to a buffer and exceeding that buffer boundary and overwriting memory fragments of a process. To prevent this in nginx we can set buffer size limitations for all clients.'\n  describe parse_config(nginx_parsed_config, options) do\n    its('client_body_buffer_size') { should eq CLIENT_BODY_BUFFER_SIZE }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('client_max_body_size') { should eq CLIENT_MAX_BODY_SIZE }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('client_header_buffer_size') { should eq CLIENT_HEADER_BUFFER_SIZE }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('large_client_header_buffers') { should eq LARGE_CLIENT_HEADER_BUFFER }\n  end\nend\n","source_location":{"line":166,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":8.387e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-07","title":"Control simultaneous connections","desc":"NginxHttpLimitZone module to limit the number of simultaneous connections for the assigned session or as a special case, from one IP address.","descriptions":[{"label":"default","data":"NginxHttpLimitZone module to limit the number of simultaneous connections for the assigned session or as a special case, from one IP address."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-07' do\n  impact 1.0\n  title 'Control simultaneous connections'\n  desc 'NginxHttpLimitZone module to limit the number of simultaneous connections for the assigned session or as a special case, from one IP address.'\n  describe parse_config(nginx_parsed_config, options) do\n    its('limit_conn_zone') { should eq '$binary_remote_addr zone=default:10m' }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('limit_conn') { should eq 'default 5' }\n  end\nend\n","source_location":{"line":184,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":4.603e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-08","title":"Prevent clickjacking","desc":"Do not allow the browser to render the page inside an frame or iframe.","descriptions":[{"label":"default","data":"Do not allow the browser to render the page inside an frame or iframe."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-08' do\n  impact 1.0\n  title 'Prevent clickjacking'\n  desc 'Do not allow the browser to render the page inside an frame or iframe.'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('add_header') { should include 'X-Frame-Options SAMEORIGIN' }\n  end\nend\n","source_location":{"line":196,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":3.681e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-09","title":"Enable Cross-site scripting filter","desc":"This header is used to configure the built in reflective XSS protection. This tells the browser to block the response if it detects an attack rather than sanitising the script.","descriptions":[{"label":"default","data":"This header is used to configure the built in reflective XSS protection. This tells the browser to block the response if it detects an attack rather than sanitising the script."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-09' do\n  impact 1.0\n  title 'Enable Cross-site scripting filter'\n  desc 'This header is used to configure the built in reflective XSS protection. This tells the browser to block the response if it detects an attack rather than sanitising the script.'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('add_header') { should include 'X-XSS-Protection \"1; mode=block\"' }\n  end\nend\n","source_location":{"line":205,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":3.128e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-10","title":"Disable content-type sniffing","desc":"It prevents browser from trying to mime-sniff the content-type of a response away from the one being declared by the server. It reduces exposure to drive-by downloads and the risks of user uploaded content that, with clever naming, could be treated as a different content-type, like an executable.","descriptions":[{"label":"default","data":"It prevents browser from trying to mime-sniff the content-type of a response away from the one being declared by the server. It reduces exposure to drive-by downloads and the risks of user uploaded content that, with clever naming, could be treated as a different content-type, like an executable."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-10' do\n  impact 1.0\n  title 'Disable content-type sniffing'\n  desc 'It prevents browser from trying to mime-sniff the content-type of a response away from the one being declared by the server. It reduces exposure to drive-by downloads and the risks of user uploaded content that, with clever naming, could be treated as a different content-type, like an executable.'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('add_header') { should include 'X-Content-Type-Options nosniff' }\n  end\nend\n","source_location":{"line":214,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":2.516e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-12","title":"TLS Protocols","desc":"When choosing a cipher during an SSLv3 or TLSv1 handshake, normally the client's preference is used. If this directive is enabled, the server's preference will be used instead.","descriptions":[{"label":"default","data":"When choosing a cipher during an SSLv3 or TLSv1 handshake, normally the client's preference is used. If this directive is enabled, the server's preference will be used instead."}],"impact":1.0,"refs":[{"url":"https://mozilla.github.io/server-side-tls/ssl-config-generator/","ref":"SSL Hardening config"}],"tags":{},"code":"control 'nginx-12' do\n  impact 1.0\n  title 'TLS Protocols'\n  desc 'When choosing a cipher during an SSLv3 or TLSv1 handshake, normally the client\\'s preference is used. If this directive is enabled, the server\\'s preference will be used instead.'\n  ref 'SSL Hardening config', url: 'https://mozilla.github.io/server-side-tls/ssl-config-generator/'\n  describe parse_config(nginx_parsed_config, options) do\n    its('ssl_protocols') { should eq 'TLSv1.2' }\n    its('ssl_session_tickets') { should eq 'off' }\n    its('ssl_ciphers') { should eq '\\'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\\'' }\n    its('ssl_prefer_server_ciphers') { should eq 'on' }\n    its('ssl_dhparam') { should eq '/etc/nginx/dh2048.pem' }\n  end\nend\n","source_location":{"line":223,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":3.345e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-13","title":"Add HSTS Header","desc":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism which helps to protect websites against protocol downgrade attacks and cookie hijacking. It allows web servers to declare that web browsers (or other complying user agents) should only interact with it using secure HTTPS connections, and never via the insecure HTTP protocol. HSTS is an IETF standards track protocol and is specified in RFC 6797.","descriptions":[{"label":"default","data":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism which helps to protect websites against protocol downgrade attacks and cookie hijacking. It allows web servers to declare that web browsers (or other complying user agents) should only interact with it using secure HTTPS connections, and never via the insecure HTTP protocol. HSTS is an IETF standards track protocol and is specified in RFC 6797."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-13' do\n  impact 1.0\n  title 'Add HSTS Header'\n  desc 'HTTP Strict Transport Security (HSTS) is a web security policy mechanism which helps to protect websites against protocol downgrade attacks and cookie hijacking. It allows web servers to declare that web browsers (or other complying user agents) should only interact with it using secure HTTPS connections, and never via the insecure HTTP protocol. HSTS is an IETF standards track protocol and is specified in RFC 6797.'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('add_header') { should include 'Strict-Transport-Security max-age=15768000' }\n  end\nend\n","source_location":{"line":237,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":4.692e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-14","title":"Disable insecure HTTP-methods","desc":"Disable insecure HTTP-methods and allow only necessary methods.","descriptions":[{"label":"default","data":"Disable insecure HTTP-methods and allow only necessary methods."}],"impact":1.0,"refs":[{"url":"https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)","ref":"OWASP HTTP Methods"}],"tags":{},"code":"control 'nginx-14' do\n  impact 1.0\n  title 'Disable insecure HTTP-methods'\n  desc 'Disable insecure HTTP-methods and allow only necessary methods.'\n  ref 'OWASP HTTP Methods', url: 'https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006)'\n\n  describe file(nginx_conf) do\n    its('content') { should match(/^\\s*if\\s+\\(\\$request_method\\s+\\!\\~\\s+\\^\\(#{HTTP_METHODS}\\)\\$\\)\\{?$/) }\n  end\nend\n","source_location":{"line":246,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":6.243e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-15","title":"Content-Security-Policy","desc":"The Content-Security-Policy HTTP response header helps you reduce XSS risks on modern browsers by declaring what dynamic resources are allowed to load via a HTTP Header","descriptions":[{"label":"default","data":"The Content-Security-Policy HTTP response header helps you reduce XSS risks on modern browsers by declaring what dynamic resources are allowed to load via a HTTP Header"}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-15' do\n  impact 1.0\n  title 'Content-Security-Policy'\n  desc 'The Content-Security-Policy HTTP response header helps you reduce XSS risks on modern browsers by declaring what dynamic resources are allowed to load via a HTTP Header'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('add_header') { should include 'Content-Security-Policy \"script-src \\'self\\'; object-src \\'self\\'\"' }\n  end\nend\n","source_location":{"line":257,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":4.959e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-16","title":"Set cookie with HttpOnly and Secure flag","desc":"You can mitigate most of the common Cross Site Scripting attack using HttpOnly and Secure flag in a cookie. Without having HttpOnly and Secure, it is possible to steal or manipulate web application session and cookies and it’s dangerous.","descriptions":[{"label":"default","data":"You can mitigate most of the common Cross Site Scripting attack using HttpOnly and Secure flag in a cookie. Without having HttpOnly and Secure, it is possible to steal or manipulate web application session and cookies and it’s dangerous."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-16' do\n  impact 1.0\n  title 'Set cookie with HttpOnly and Secure flag'\n  desc 'You can mitigate most of the common Cross Site Scripting attack using HttpOnly and Secure flag in a cookie. Without having HttpOnly and Secure, it is possible to steal or manipulate web application session and cookies and it’s dangerous.'\n  describe parse_config(nginx_parsed_config, options_add_header) do\n    its('set_cookie_flag') { should include '* HttpOnly secure' }\n  end\nend\n","source_location":{"line":266,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":3.57e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]},{"id":"nginx-17","title":"Control timeouts to improve performance","desc":"Control timeouts to improve server performance and cut clients.","descriptions":[{"label":"default","data":"Control timeouts to improve server performance and cut clients."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-17' do\n  impact 1.0\n  title 'Control timeouts to improve performance'\n  desc 'Control timeouts to improve server performance and cut clients.'\n  describe parse_config(nginx_parsed_config, options) do\n    its('keepalive_timeout') { should eq KEEPALIVE_TIMEOUT }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('client_body_timeout') { should eq CLIENT_BODY_TIMEOUT }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('client_header_timeout') { should eq CLIENT_HEADER_TIMEOUT }\n  end\n  describe parse_config(nginx_parsed_config, options) do\n    its('send_timeout') { should eq SEND_TIMEOUT }\n  end\nend\n","source_location":{"line":275,"ref":"controls/nginx_spec.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"No-op","run_time":5.227e-06,"start_time":"2022-10-28T17:36:15+00:00","resource":"No-op","skip_message":"Skipped control due to only_if condition.","resource_class":"noop","resource_params":"[]","resource_id":"No-op"}]}],"status":"loaded","status_message":""}],"statistics":{"duration":0.007968089},"version":"5.18.14"}